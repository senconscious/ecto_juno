name: Elixir CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    name: Build, check code health and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      id: beam
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.14' # Define the elixir version [required]
        otp-version: '25.0' # Define the OTP version [required]
      
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile dependencies
      run: mix deps.compile

    - name: Restore PLT cache
      uses: actions/cache@v2
      id: plt_cache
      with:
        key: |
          ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
        restore-keys: |
          ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
        path: |
          priv/plts

      # Create PLTs if no cache was found
    - name: Create PLTs
      if: steps.plt_cache.outputs.cache-hit != 'true'
      run: mix dialyzer --plt

    - name: Run code health check and tests
      run: mix check
